version: "3"

services:
  app:
    build:
      context: .
    image: paysy
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - app-media-files:/app/media/
      - app-static-files:/app/static/
    environment:
      - DJANGO_SUPERUSER_NAME=paysyadmin
      - DJANGO_SUPERUSER_MAIL=paysyadmin@paysy.com
      - DJANGO_SUPERUSER_PASSWORD=passwordTest123
      - ALLOWED_HOST=localhost
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
    depends_on:
      - db
      - redis

  db:
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres-vol:/var/lib/postgresql/data

  nginx:
    image: nginx:1.17.8-alpine
    links:
      - app
    container_name: nginx_app
    depends_on:
      - app
    ports:
      - 80:80
      - 443:443
    volumes:
      - app-media-files:/app/media/
      - app-static-files:/app/static/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


  celery:
    build: .
    command: celery --app=paysy worker --loglevel=info
    volumes:
      - ./app:/app
    depends_on:
      - app
      - redis
      - db
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_PASS=supersecretpassword
      - DB_USER=postgres


  celery-beat:
    build: .
    command: celery --app=paysy beat --loglevel=info
    volumes:
      - ./app:/app
    links:
      - celery
    depends_on:
      - app
      - redis
      - celery

  redis:
    image: "redis:alpine"
    restart: on-failure

volumes:
  postgres-vol:
  app-static-files:
  app-media-files:
